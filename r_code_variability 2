#nella prima fase faremo l'analisi multivariata della nostra immagine originale
#andremo ad utilizzare la prima componente
#nella seconda parte torneremo sulla variabilià, partendo dalla prima ccomponente principale misureremo l'eterogeneità del sistema


library(raster)
library(RStoolbox)
library(ggplot2)
library(patchwork)
library(viridis)
setwd("C:/lab/")

sen <- brick("sentinel.png")
sen
plot(sen)
#il quarto è solo un livello di controllo
# i primi 3 livelli sono:
#NIR banda #1
#red banda #2
#green banda #2

#andiamo ad usare la funzione ggRGB, la funzione di GG plot per creare un RGB

g1 <- ggRGB(sen, 1, 2, 3 )
#con ggRGB lo stretch viene fatto in automatico
# non specifico r=, ecc, in ggRGB è facoltativo specificare o meno
#sugli assi trovo le coordinate x e y, all'interno i valori dei pixel montati con l'infrarosso nel red

#vES: isualizzare l'immagine in modo che l'immagine diventi verde
#devo quindi montare l'infrarosso nella componente green
g2 <- ggRGB(sen, 2, 1, 3 )
#la vegetazione è verde, il bianco è il ghiaccio, il nero il suolo nudo e l'acqua
g1 + g2
g1/g2(g1+g2)/(g1+g2)


#parte 1, Analisi Multivariata

sen_pca <- rasterPCA(sen)
#con questo passaggio passiamo da 3 layer ad uno solo, la prima componente principale
#compattiamo le info in unico layer
sen_pca

#quanta variabilità spiega questo modello?
#vado sulla summary del modello

summary(sen_pca$model)
#permette immediatamente quanta info contiene la prima componente principale
#ldevo vedere la proportion of variance
#la prima il 67%, la seconda 32%, la terza solo 0,37% (è praticamente rumore)
#posso poi vedere la variabilità cumulata e vedo che dell'immagine originale mi bastano le prime due bande per spiegare il 99% dell'informazione
#ci accontenteremo della prima

plot(sen_pca$map)
#ho le mie bande (la quarta inutile, di controllo)
#vedo che nella prima c'è già tanta informazione
#avrei capito meglio con una colorRampPalette

#voglio plottare la prima componente della PCA (vedo come si chiama dalle info della stessa "names"
#la prima si chiama PC1
pc1 <- sen_pca$map$PC1
pc2 <- sen_pca$map$PC2
pc3 <- sen_pca$map$PC3
#associo le componenti a degli oggetti, in modo da dichiararle in ggplot e rendere più pulito il codice

g1 <- ggplot() +
    geom_raster(pc1, mapping = aes(x=x, y=y, fill=PC1))
#associo al ggplot una geometria raster
#nelle aesthetics definisco il layer come PC1
#voglio plottare la prima componente della PCA (vedo come si chiama dalle info della stessa "names"
g2 <- ggplot() + 
  geom_raster(pc2, mapping = aes(x=x, y=y, fill=PC2))
g3 <- ggplot() +
  geom_raster(pc3, mapping = aes(x=x, y=y, fill=PC3))
g1 + g2 + g3


#Standard deviation PC1

sd3 <- focal(pc1, matrix(1/9, 3, 3), fun=sd)
sd3
#abbiamo tirato fuori una mappa

#Mappare con ggplot della sd della prima componente principale
im1 <- ggplot() + 
  geom_raster(sd3, mapping = aes(x=x, y=y, fill=layer)) + 
  scale_fill_viridis()

im2 <- ggplot() + 
  geom_raster(sd3, mapping = aes(x=x, y=y, fill=layer)) + 
  scale_fill_viridis(option = "cividis")
#come fill dobbiamo andare a scegliere il layer da plottare, si chiama layer
#si vede piuttosto bene la differenziazione nei crepacci di suolo nudo
#cividis attenua gli scuri
im3 <- ggplot() + 
  geom_raster(sd3, mapping = aes(x=x, y=y, fill=layer)) + 
  scale_fill_viridis(option = "inferno")
#accentua le tonalità nelle zone ad alta variabilià

im1 + im2 + im3
dev.off()

## Calcolare l'eterogeneià in una finestra 5x5

sd5 <- focal(pc1, matrix(1/25, 5, 5), fun=sd)
sd5

im4 <- ggplot() + 
  geom_raster(sd5, mapping = aes(x=x, y=y, fill=layer)) + 
  scale_fill_viridis(option = "inferno")

im3 + im4
#confronto 3x3 con 5x5

## Calcolare l'eterogeneià in una finestra 7x7

sd7 <- focal(pc1, matrix(1/49, 7, 7), fun=sd)
sd7

im5 <- ggplot() + 
  geom_raster(sd5, mapping = aes(x=x, y=y, fill=layer)) + 
  scale_fill_viridis(option = "inferno")

im3 + im4 + im5
