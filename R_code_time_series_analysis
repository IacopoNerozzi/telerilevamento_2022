### Time Series Analysis


setwd("C:/lab/greenland/")
library(raster)

#faremo prima l'operazione classica
#poi quella globale, importando i dati tutti insieme

#già la funzione brick carica più dati, carica tutte le bande di un'immagine
#ora però non abbiamo una sola immagine con tot bande diverse, ma 4 fonti di dati diverse

lst2000 <- raster("lst_2000.tif")
lst2000
#immagine a 16bit
plot(lst2000)

lst2005 <- raster("lst_2005.tif")
lst2010 <- raster("lst_2010.tif")
lst2015 <- raster("lst_2015.tif")
#importo i restanti dati

cl <- colorRampPalette(c("blue", "light blue", "pink", "red")) (100)
#creo la palette di colori da utilizzare

par(mfrow=c(2,2))
plot(lst2000, col=cl)
plot(lst2005, col=cl)
plot(lst2010, col=cl)
plot(lst2015, col=cl)
#questo è il metodo classico, più macchinoso

#provo l'importazione di massa

rlist <- list.files(pattern="lst")
#uso la funzione list.files
#crea una lista di oggetti secondo un pattern specificato
#il pattern è il metodo di riconoscimento dei files che utilizza il software per riconoscerli
#deve essere un qualcosa che accomuna tutti i dati necessari per metterli insieme
rlist
#non è altro che una lista dei files

import <- lapply(rlist, raster)
import
#con la funzione lapply applico una funzione ad un oggetto
#applico la funzione raster alla lista
#gli argomenti sono la lista e poi la funzione
#ho quindi importato i miei oggetti contemporaneamente

tgr <- stack(import)
tgr
#ho fatto lo stack dei dati
#in questo modo metto insieme i dati senza passare dal multiframe
plot(tgr, col=cl)
#posso anche plottarli risparmiandomi il par

#potrei aver bisogno di plottare solo il primo elemento dello stack
plot(tgr[[1]], col=cl)
#devo quindi specificarlo nella funzione appiccicandolo all'argomento dell'oggetto da importare
#posso specificare acnhe elementi diversi se ho bisogno di essi
dev.off()

plotRGB(tgr, r=1, g=2, b=3, stretch="Lin") 
#se mettessi tutti i valori uguali avrei un'immagine in bianco e nero
#devo necessariamente specififcare lo stretch con un'immagine in bianco e nero
plotRGB(tgr, 1, 2, 4, stretch="Lin") 
plotRGB(tgr, 4, 3, 2, stretch="Lin") 
#lo stretch adatta i dati (normalmente all'interno di un range nel totale all'intero range di dati 6(5K a 16 bit)

cl <- colorRampPalette(c("blue","light blue","pink","red"))(100)
plot(TGr, col=cl)
#plot con la nostra palette

#colorist è un pacchetto molto utile e comprende molte mappe di distribuzione delle specie
#diverse colorazioni a seconda della stagione
#utile per evidenziare la distribuzione stagionale

##Secondo esempio di Time Series Analysis


# NO2 DURANTE IL LOCKDOWN

library(raster)
setwd("C:/lab/EN")

en01 <- raster("EN_0001.png")
en01

cl <- colorRampPalette(c('red','orange','yellow'))(100)

plot(en01, col=cl) 
# situazione nube NO2 a gennaio 2020 (prima del lockdown, molto estesa)
dev.off()

en13 <- raster("EN_0013.png")
en13

plot(en13, col=cl) 
# situazione nube NO2 a marzo 2020 (poco dopo inizio lockdown, nube già meno estesa)
dev.off()


# esercizio: importare tutto il set di immagini insieme

ENlist <- list.files(pattern="EN") 
ENlist 
# crea la lista di file EN
#EN sta per European Nytrogen
ENimport <- lapply(ENlist, raster)
# applica la funzione raster a tutti gli oggetti della lista
#nell'argomento prima scrivo il nome della lista, poi la funzione
ENstack <- stack(ENimport) 
# crea il Raster Stack (insieme di Raster Brick)

plot(ENstack, col=cl) 
# plotta tutte le immagini dello stack
#nell'argomento scrivo lo stack e la palette


# esercizio: plottare solo en01 (prima immagine di gennaio) accanto a en13 (ultima immagine di marzo)

par(mfrow=c(1,2))
plot(ENstack$EN_0001, col=cl)
plot(ENstack$EN_0013, col=cl)
dev.off()
#plotto singolarmente le immagini all'interno di un par

# oppure

en01_13 <- stack(ENstack[[1]], ENstack[[13]])
#assegno la coppia di immagini stackate ad un oggetto en01_13
plot(en01_13, col=cl)
#plotto insieme le immagini in uno stack
dev.off()


# vediamo la differenza tra la situazione a gennaio e quella a febbraio
difEN <- ENstack[[1]] - ENstack[[13]]
cldifEN <- colorRampPalette(c('blue','white','red'))(100) 
# gennaio appare come la zona in rosso e marzo la zona in blu, febbraio è verde
plot(difEN, col=cldifEN)

dev.off()



library(raster)
setwd("C:/lab/")
source("R_inputcode.txt")

rlist <- list.files(pattern="EN")
ENimport <- lapply(rlist, raster)
en <- stack(ENimport)

cl <- colorRampPalette(c('red','orange','yellow'))(100)
plot(en, col=cl)


plotRGB(en, r=1, g=7, b=13, stretch="lin")
