### Land Cover ###

#Codice in cui genereremo immagini land cover da immagini satellitari

library(raster)
library(RStoolbox)
#contiene le funzioni per la classificazione
setwd("C:/lab/")
#set working directory

#lavorerò di nuovo con le immagini satellitari del Rio Pexoto, con la deforestazione avvenuta fra il 1992 e il 2006
l1992 <- brick("defor1_.jpg")
#l1992 mi ricorda che è un landset del 1992
#mi dava errore "file non esistente" non avevo lanciato il comando di working directory
plotRGB(l1992, 1,2,3, stretch="lin")
#non importa che riscriva r=, ecc
l2006 <- brick("defor2_.jpg")
plotRGB(l2006, 1,2,3, stretch="lin")
#ho importato anche il secondo file

par(mfrow=c(2,1))
plotRGB(l1992, 1,2,3, stretch="lin")
plotRGB(l2006, 1,2,3, stretch="lin")
dev.off()
#le visualizzo insieme, per un confronto

install.packages("ggplot2")
library(ggplot2)

#creo un multiframe con ggplot2
par(mfrow=c(2,1))
ggRGB(l1992, 1,2,3, stretch="lin")
ggRGB(l2006, 1,2,3, stretch="lin")
#non andava la funzione RGB, di nuovo dimenticato di caricare RStoolbox
dev.off()

library(patchwork)
#compositore di plot
#l'idea è quella di considerare i plot come oggetti, dopodichè metterli in fila e li somma
#con la funzione ggRGB abbiamo creato due plot
#possiamo quindi associare la funzione a due oggetti per poi comporli
p1 <- ggRGB(l1992, 1,2,3, stretch="lin")
p2 <- ggRGB(l2006, 1,2,3, stretch="lin")

p1 + p2
#unione dei due plot
# e se volessi metterli uno sopra l'altro?
p1/p2
#uso la frazione
dev.off()


#guardando l'immagine del 92 c'è poca differenza fra suolo nudo e acqua, questo perchè l'acqua non è pura ma contiene molto detrito
#possiamo quindi fare due classi
#a cosa serve classificare? posso poi mettere a confronto le due classi nelle due immagini
#posso avere un valore della porzione di terreno che da foresta è passato ad agricolo

#classificazione
l1992c <- unsuperClass(l1992, nClasses=2)
#associo il modello della classificazione all'oggetto
#aggiungo c per ricordarmi che è classificato
l1992c
#è un raster layer
#il n di px è lo stesso del n di px in entrata
#non consideriamo la risoluzione, essendo già elaborata
#il numero di valori dell'immagine classificata è 1 o 2, non 255 dell'immagine a 8bit
plot(l1992c)
#mi da errore volendolo plottare, è normale
#dicendo "does not have components 'x' and 'y'" dice che non è una mappa, ma un modello
#al mio modello è legata una mappa con il segno del dollaro
#devo farlo anche io con il comando
plot(l1992c$map)
#lego quindi la mappa al modello e lo plotto

#nella classificazione il nome del modello viene scelto dal software, per questo i colori possono variare fra operatori (noi studenti)
#nel mio caso:
#class 1: Forest. bianco
#Class 2: Agriculture + Water, verde

#Esercizio: classificare anche la seconda immagine
l2006
l2006c <- unsuperClass(l2006, nClasses=2)
l2006c
plot(l2006c$map)
#nel mio caso:
#class 1: Forest. bianco
#Class 2: Agriculture + Water, verde

#Frequenze
install.packages("questionr")

#riprendiamo le due immagini classificate
plot(l1992c$map)
plot(l2006c$map)

freq(l1992c$map)
#restituisce le frquenze delle due classi
#cosa sono i numeri? il numero di pixel delle due classi
#class 1: 306012
#class 2: 35280
freq(l2006c$map)
#class 1: 164480
#class 2: 178246



### 28/4

library(raster)
library(ggplot2)
library(RStoolbox)
library(patchwork)

setwd("C:/lab/")

l1992 <- brick("defor1_.jpg")
l2006 <- brick("defor2_.jpg")
#importo i landsat in R

#avendo importato il pacchetto ggplot2 posso usare la funzione ggRGB anzichè plotRGB
p1 <- ggRGB(l1992, 1,2,3, stretch="lin")
p2 <- ggRGB(l2006, 1,2,3, stretch="lin")
#plotto e assegno a due oggetti
#associo alle 3 componenti (RGB) le tre bande (123)
#siccome la prima banda era il vicino infrarosso (di norma la quarta) ce lo restituisce come prima
p1 + p2
#multiframe dei plot

l1992c <- unsuperClass(l1992, nClasses=2)
l1992c
l2006c <- unsuperClass(l2006, nClasses=2)
l2006c
#classifico le due immagini con la funzione unsuperClass

#riprendiamo le due immagini classificate
plot(l1992c$map)
plot(l2006c$map)
# così posso rivisualizzarle


#Frequenze
freq1992 <- freq(l1992c$map)
freq1992
#class 1: 306409 (forest) verde
#class 2: 34883 (agriculture + water) bianco
freq2006 <- freq(l2006c$map)
freq2006
#class 1: 179053 (forest) verde
#class 2: 163673 (agriculture + water) bianco

#se volessi trovare la proporzione di foresta sul territorio?
#devo fare una proporzione fra le due
#nell'immagine la mia unità di misura sono i pixel
#calcolerò quindi i pixel di foresta sul totale


#Percentuali di pixel 1992

l1992
#nelle dimensioni vedo il numero di pixel totali
tot1992 <- 341292
#lo assegno all'oggetto immagine
prop_forest_92 <- 306409/341292
prop_forest_92
#ho la proporzione della classe foresta
perc_forest_92 <- 306409/341292 *100
perc_forest_92
# ho la percentuale della classe foresta

#Esercizio: percentuale dell'agricoltura nel 92

#metodo 1
l1992
freq1992
perc_agri_92 <- 34883/341292 * 100
perc_agri_92
#ho la percentuale di entrambe le classi

#metodo 2
perc_agri_92 <- 100 - perc_forest_92
perc_agri_92


#Percentuali nel 2006?

l2006
tot2006 <- 342726
#popolazione di pixel: l'intero numero di pixel
#non è un campione di pixel, un sottogruppo rappresentativo dell'insieme
#abbiamo usato campioni all'inizio della classificazione
freq2006
#riguardo le mie frequenze
perc_forest_06 <- 179053/tot2006 * 100
perc_forest_06
perc_agri_06 <- 100 - perc_forest_06
perc_agri_06

#DATI FINALI
#perc_forest_92 : 89.779
#perc_agri_92 : 10.220
#perc_forest_06 : 52.243
#perc_agri_06 : 47.756

#Quanto cambiano le immagini nel tempo?

#Costruiamo un dataframe con i nostri dati
#Columns (fields)
class <- c("Agriculture", "Forest")
#questo è un vettore, un insieme di caratteri dello stesso tipo
#sono testi, characters, da noi scelti, dobbiamo usare le virgolette
percent_1992 <- c(89.779, 10.220)
percent_2006 <- c(52.243, 47.756)
#A questo punto ho dichiarato e creato le colonne del mio dataframe
#le colonne non sono altro che singoli vettori

multitemporal <- data.frame(class, percent_1992, percent_2006)
#nella funzione dataframe inserisco in fila i miei vettori
multitemporal
#ho creato il dataframe

?ggplot
#per plottare il dataframe dovremo usare la funzione ggplot

## ggplot(df, aes(x, y, other aesthetics))
#ggplot ha una sintassi complessa dato che si compone di più "funzioni"
#ggplot in se crea un nuovo plot vuoto, riempito dagli argomenti
#dobbiamo specificare il dataset/dataframe da usare e l'aesthetic da usare(righe, colonne e colori ecc=)
ggplot(multitemporal, aes(x=class, y=percent_1992, color=class))
#metto come x le classi, come colonne le percentuali del 92
#color=class indica che il colore varia in base alla classe

#la funzione così com'è apre un plot vuoto, non abbiamo definito che plot vogliamo
#la funzione che mi permette di fare un grafico a barre è geom_bar
?geom_bar
ggplot(multitemporal, aes(x=class, y=percent_1992, color=class)) + 
  geom_bar(stat="identity", fill="white")
#importante avere il + sulla riga di ggplot

#facciamo lo stesso per il 2006

ggplot(multitemporal, aes(x=class, y=percent_2006, color=class)) + 
  geom_bar(stat="identity", fill="white")
#noto come agriculture abbia preso piede

