### Classificazione d'immagini

# Grand Canyon, class. min. e rocce

library(RStoolbox)
library(raster)
setwd("C:/lab/")

gc <- brick("dolansprings_oli_2013088_canyon_lrg.jpg")
gc

plotRGB(gc, 1, 2, 3, stretch="lin")
#non importa specificare r= g= b= essendo in ordine

#Esercizio: cambiare lo stretch in hist stretch
#cosa serve cambiare stretch? a riempire tutto il range di valori
#è una mera operazione di visualizzazione, non cambia i dati

# costruiamo un modello con la funzione unsuperClass, che raggruppa in modo casuale i raster caricati con un algoritmo di kmeans clustering
# il k means clustering è un algoritmo che divide un insieme di oggetti in k gruppi sulla base dei loro attributi
gcclass2 <- unsuperClass(gc, nClasses=2) 
# nel modello è compresa una mappa che decidiamo di dividere in 2 categorie (cluster)
# la valutazione della categoria nella quale cade ogni pixel è randomica, come definito dalla funzione stessa
# possiamo verificare le classi in cui abbiamo impostato la divisione dei pixel nell'ultima riga delle statistiche del modello (values)
gcclass2

cl <- colorRampPalette(c('yellow','black','red'))(100)
plot(gcclass2$map, col=cl) 
# plottiamo solo la mappa del modello, visualizzando le 3 classi che abbiamo stabilito
# classe rossa = a più alta energia
# classe nera = intermedia
# classe gialla = a più bassa energia
# in realtà ogni persona che ha usato il codice ottiene mappe diverse a livello di colori
# perchè l'algoritmo raggruppa in modo casuale i pixel dell'immagine nelle 3 categorie che abbiamo impostato,
# prendendo casualmente 10000 pixel sul totale dei pixel dell'immagine (7669050 pixel) ma in maniera diversa ogni volta che viene utilizzato.
# L'algoritmo mantiene però il pattern spaziale dell'immagine (se il numero di categorie in cui è stata divisa rimane lo stesso)

#se volessimantere sempre la stessa classificazione posso usare la funzione set.seed(17)


## Esercizio Cassificare con 4 classi


gcclass4 <- unsuperClass(gc, nClasses=4)
#nell'argomento specifico la funzione da classificare e il numero di classi
gcclass4

plot(gcclass4$map)
